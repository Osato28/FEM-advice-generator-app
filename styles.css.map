{"version":3,"sources":["../src/base/reset.scss","../src/styles.scss","../src/base/base.scss","../src/components/advice/_variables.scss","../src/components/advice/mobile.scss","../src/components/advice/desktop.scss"],"names":[],"mappings":"AAAA;ECCA,YAAA;AACA;;ADEA;ECCA,SAAA;AACA;;ACJA;EACI,kCAAA;ADOJ;;ACJA;EACI,uCAAA;EACA,wBAAA;EACA,WAAA;ADOJ;;ACJA;EACI,WAAA;EACA,YAAA;EACA,kBAAA;ADOJ;;AEtBA,kDAAA;AACA,mFAAA;AAEA,wEAAA;AACA,0EAAA;AAIA;EACI,uCAAA;EACA,oCAAA;EACA,qCAAA;EACA,uCAAA;EACA,uCAAA;EAEA,sBAAA;EACA,sBAAA;EACA,uBAAA;EAEA,iBAAA;EACA,mBAAA;EACA,oBAAA;EAEA,iBAAA;EACA,qBAAA;AFkBJ;;AEdA;EACI;IACI,sBAAA;IACA,sBAAA;IACA,wBAAA;IAEA,iBAAA;IACA,mBAAA;EFgBN;AACF;AGpDA,sCAAA;AACA,+GAAA;AAKA;EACI,uCAAA;EAEA,aAAA;EACA,sBAAA;EACA,mBAAA;EAEA,sBAAA;EACA,4BAAA;AHgDJ;AG9CI;EACI,+BAAA;EACA,+BAAA;EACA,sCAAA;AHgDR;AG7CI;EACI,kBAAA;EACA,QAAA;EACA,SAAA;EACA,gCAAA;AH+CR;;AGxCI;EACI,aAAA;AH2CR;AGxCI;EACI,cAAA;EACA,WAAA;AH0CR;AGvCI;EACI,wBAAA;EACA,2BAAA;EACA,gBAAA;EAEA,qBAAA;EAGA,0BAAA;EAAA,uBAAA;EAAA,kBAAA;EACA,sBAAA;AHsCR;AGnCI;EACI,0BAAA;EACA,6BAAA;EACA,gBAAA;EACA,kBAAA;EACA,+BAAA;EAEA,sBAAA;EAEA,yBAAA;AHmCR;AGhCI;EACI,sCAAA;EACA,uBAAA;EACA,wBAAA;EACA,oBAAA;EAGA,kBAAA;EACA,UAAA;EACA,SAAA;EACA,+BAAA;EAGA,aAAA;EACA,mBAAA;EACA,qBAAA;AH8BR;AG3BQ;EACI,cAAA;EACA,2BAAA;EAGA,4BAAA;EAGA,YAAA;AHyBZ;AGtBQ;EACI,aAAA;EACA,iDAAA;AHwBZ;;AGjBA;EACI,0BAAA;EACA,6BAAA;EACA,2BAAA;AHoBJ;;AI/HA,oCAAA;AACA,gGAAA;AAEA;EACI;IACI,4BAAA;EJiIN;EI7HM;IACI,cAAA;IACA,WAAA;EJ+HV;EI5HM;IACI,aAAA;EJ8HV;AACF","file":"styles.css","sourcesContent":["html, body {\n    height: 100%;\n}\n\n* {\n    margin: 0;\n}","@import 'base/reset';\n@import 'base/base';\n\n@import 'components/advice/variables';\n@import 'components/advice/mobile';\n@import 'components/advice/desktop';","@import 'variables';\n\n:root {\n    font-family: 'Manrope', sans-serif;\n}\n\nbody {\n    background-color: #{$clr-bg};\n    /* Fallback text color */\n    color: #fff;\n}\n\n.component-wrapper {\n    width: 100%;\n    height: 100%;\n    position: relative;\n}","/* ALL colors in a component use local variables */\n/* Local variables can get values from base, but the component should be portable */\n\n/* This file is for local variables that change based on media queries */\n/* For logic that changes on media queries, see mobile and desktop files */\n\n@import '../../base/variables';\n\n:root {\n    --adv-cont-bgclr: #{$clr-backdrop};\n    --adv-id-clr: #{$clr-accent};\n    --adv-text-clr: #{$clr-primary};\n    --adv-btn-bgclr: #{$clr-accent};\n    --adv-btn-imgclr: #{$clr-bg};\n\n    --adv-cont-minw: 280px;\n    --adv-cont-maxw: 350px;\n    --adv-cont-bradius: 8px;\n\n    --adv-id-fs: 12px;\n    --adv-text-fs: 22px;\n    --adv-text-lh: 1.3em;\n\n    --adv-btn-w: 64px;\n    --adv-btn-img-w: 24px;\n}\n\n// 1366, 1440px\n@media (min-width: 1024px) {\n    :root {\n        --adv-cont-minw: 400px;\n        --adv-cont-maxw: 577px;\n        --adv-cont-bradius: 20px;\n\n        --adv-id-fs: 14px;\n        --adv-text-fs: 26px;\n    }\n}","/* CSS layout for the mobile version */\n/* Defines general logic of the layout; most media-related changes are linked to variables in _variables.scss */\n\n\n// Styling for div.advice as an element\n\n.advice {\n    background-color: var(--adv-cont-bgclr);\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    box-sizing: border-box;\n    padding: 45px 22px 64px 22px;\n\n    &.container {\n        min-width: var(--adv-cont-minw);\n        max-width: var(--adv-cont-maxw);\n        border-radius: var(--adv-cont-bradius);\n    }\n\n    &.centered {\n        position:absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n    }\n}\n\n// Styling for .advice's children\n\n.advice {\n    .divider-desktop {\n        display: none;\n    }\n\n    .divider-mobile {\n        display: block;\n        width: 100%;\n    }\n\n    .id {\n        color: var(--adv-id-clr);\n        font-size: var(--adv-id-fs);\n        font-weight: 400;\n\n        letter-spacing: 0.2em;\n\n        // Make text slightly squashed\n        width: fit-content;\n        transform: scaleY(0.9);\n    }\n\n    .text {\n        color: var(--adv-text-clr);\n        font-size: var(--adv-text-fs);\n        font-weight: 500;\n        text-align: center;\n        line-height: var(--adv-text-lh);\n\n        letter-spacing: 0.05em;\n\n        margin: 35px 5px 30px 5px;\n    }\n\n    .btn {\n        background-color: var(--adv-btn-bgclr);\n        width: var(--adv-btn-w);\n        height: var(--adv-btn-w);\n        border-radius: 100px;\n\n        // Position at the bottom-middle\n        position: absolute;\n        bottom: 0%;\n        left: 50%;\n        transform: translate(-50%, 50%);\n        \n        // Center image inside\n        display: flex;\n        align-items: center;\n        justify-items: center;\n\n\n        .img-dice {\n            display: block;\n            width: var(--adv-btn-img-w);\n\n            // Currently the SVG has a fixed color equal to $clr-bg, but it can be changed to fill=\"currentColor\" later\n            color: var(--adv-btn-imgclr);\n\n            // Necessary to center the element properly\n            margin: auto;\n        }\n\n        &:hover, &:focus {\n            outline: none;\n            box-shadow: 0px 0px 20px 3px var(--adv-btn-bgclr);\n        }\n    }\n}\n\n\n// Styling for noscript\nnoscript > .advice {\n    color: var(--adv-text-clr);\n    font-size: var(--adv-text-fs);\n    padding: var(--adv-text-fs);\n}","/* CSS layout for the dark version */\n/* Defines general logic; font size and other such variables are controlled by _variables.scss */\n\n@media (min-width: 1024px) {\n    .advice {\n        padding: 51px 54px 75px 54px;\n    }\n    \n    .advice {\n        .divider-desktop {\n            display: block;\n            width: 100%;\n        }\n    \n        .divider-mobile {\n            display: none;\n        }\n    }\n}"]}